# -*- coding: utf-8 -*-
"""exercicios_numpy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EBP8ZvEil6yMGrr5l2D5BK4tdqECfJ8m

Numpy
1. Utilizando a biblioteca numpy siga as instruções abaixo:
   1. Crie um array 6x6 preenchido com zero
   1. Preencha o centro desse array com um array 4x4 preenchido com uns
   1. Preencha o centro desse array com um array 2x2 preenchido com dois
   1. Gere um segundo array 6x6 com números inteiros aleatórios entre 0 e 2.
   1. Subtraia o primeiro array pelo segundo

1.

1.a
"""

# !pip install numpy

import numpy as np
# help(np.zeros)
array1 = np.zeros(shape=(6,6))
array1

array1.ndim

array1.size

array1.shape

array1.dtype

"""1.b"""

# array[1]
# array1[1, 1]
# array1[1:4]
# array1[1:5]
# array1[1:-1]
# array1[1:-1, 1:-1]
# help(np.ones)
array1[1:-1, 1:-1] = np.ones(shape=(4,4))
array1
# não dá pra fazer assim com listas sem utilizar for

"""1.c"""

# np.array([
#   [2,2],
#   [2,2]
# ])
# np.zeros(shape=(2,2)) + 2
# np.ones(shape=(2,2)) * 2
# Não dá pra fazer assim com listas
# help(np.full)
array1[2:-2, 2:-2] = np.full(shape=(2,2), fill_value=2)
array1

"""1.d"""

# numpy random
# https://numpy.org/doc/1.16/reference/routines.random.html
# help(np.random.randint)
# np.random.randint(low=0, high=3, size=(6,6))
# numpy set seed
# https://docs.scipy.org/doc/numpy-1.15.1/reference/generated/numpy.random.seed.html
np.random.seed(0)
array2 = np.random.randint(low=0, high=3, size=(6,6))
array2

"""1.e"""

array1-array2

"""2. Crie um array de duas dimensões, no formato 9x9, com números de 0 a 80 ordenados de modo crescente e selecione:
   1. Os números ímpares
   1. Os números pares
   1. Os múltiplos de sete
   1. Os múltiplos de 10
   1. Os números 32,33,42,43

2

2.a e b
"""

# help(np.arange)
# np.arange(start=0, stop=81, step=1)
array = np.arange(start=0, stop=81, step=1).reshape(9,9)
# np.arange(start=0, stop=81, step=1).reshape(9,-1)
array

# array % 2
# array % 2 == 1
mask_impar = array % 2 == 1 # Mask
# mask_impar
array[mask_impar]

"""2.b"""

# array[not mask_impar]
# array[~mask_impar]
# array % 2 == 0
mask_par = array % 2 == 0 # Mask
array[mask_par]

"""2.c"""

array
# array % 7
# array % 7 == 0
array[array % 7 == 0]
# multi_sete = [0, 7, 14, 21, 28, 35, 42, 49, 56, 63, 70, 77]
# numpy check array values in list
# https://numpy.org/doc/stable/reference/generated/numpy.isin.html
# mask_sete = np.isin(array, multi_sete)
# array[mask_sete]
# list(range(0, 80, 7))
# array[np.isin(array, range(0, 80, 7))]

"""2.d"""

# numpy get matrix diagonal
# https://numpy.org/doc/stable/reference/generated/numpy.diagonal.html
# array.diagonal()
# np.diag(array)
# array[array %10 == 0]
# array.shape
# for i in range(array.shape[0]):
#   print(array[i,i])
# array.ravel()[::10]

"""2.e"""

array

# array.ravel()[[32,33,42,43]]
# array[np.isin(array, [32,33,42,43])]
array[[3,3,4,4],[5,6,6,7]]

"""
3. Crie um array com três dimensões, onde a primeira dimensão são os dias da semana (seg a dom), a segunda dimensão são as semanas do mês (considere apenas 4 para todos os meses), e a terceira são os meses do ano (Jan a dezembro).
   1. Marque os finais de semana com a letra W
   1. Marque o começo do mês com a letra S
   1. Marque o final do mês com a letra E
   1. Marque os demais dias com a letra D
   1. Marque os feriados nacionais com a letra F
      - 01/01 - Ano novo
      - 15/04 - Paixão de Cristo
      - 21/04 - Tiradentes
      - 01/05 - Dia do Trabalho
      - 07/09 - Independência do Brasil
      - 12/10 - Nossa Senhora Aparecida
      - 02/11 - Finados
      - 15/11 - Proclamação da República
      - 25/12 - Natal"""

# numpy repeat array
# https://numpy.org/doc/stable/reference/generated/numpy.tile.html
month = np.arange(1,29).reshape(4,7)
# month
# np.tile(month, (12,1,1)).shape
calendar = np.tile(month, (12,1,1))
calendar

"""3.a"""

# calendar[:,:, 5:]
# calendar[:,:, 5:] = 'W'
calendar = calendar.astype(str)
calendar[:,:, 5:] = 'W'
calendar
# Vai ter que utilizar muito for pra fazer isso em lista

"""3.b"""

calendar[:, 0, 0]
calendar[:, 0, 0] = 'S'
calendar

"""3.c"""

# calendar[:, 3, 6]
calendar[:, -1, -1]
calendar[:, -1, -1] = 'E'
calendar

mes = [1, 4, 4, 5, 9, 10, 11, 11, 12]
dia = [1, 15, 21, 1, 7, 12, 2, 15, 25]
# dia//7
# np.array(dia)//7
# semana = np.array(dia)//7
semana = (np.array(dia)-1)//7
# (np.array(dia))%7 
dia_semana = (np.array(dia)-1)%7
# calendar[mes, semana, dia]
mes = np.array(mes) - 1
calendar[mes, semana, dia_semana] = 'F'
calendar